======================================================================
AFTER EVERYTHING:
 Module tcmc_partition_params_args_mismatch
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : 
  imports         : use wybe
  resources       : 
  procs           : 

partition > (1 calls)
0: tcmc_partition_params_args_mismatch.partition<0>
partition(p##0:(T, ?wybe.bool), l##0:wybe.list(T), outByReference yes##0:wybe.list(T), ?no##0:wybe.list(T))<{}; {}>:
  AliasPairs: []
  InterestingCallProperties: [InterestingUnaliased 1]
  MultiSpeczDepInfo: [(2,(tcmc_partition_params_args_mismatch.partition<0>,fromList [NonAliasedParamCond 1 [1]]))]
    foreign llvm icmp_ne(l##0:wybe.int, 0:wybe.int, ?tmp#8##0:wybe.bool)
    case ~tmp#8##0:wybe.bool of
    0:
        foreign llvm move(0:wybe.list(T), ?yes##0:wybe.list(T)) @tcmc_partition_params_args_mismatch:nn:nn
        foreign llvm move(0:wybe.list(T), ?no##0:wybe.list(T)) @tcmc_partition_params_args_mismatch:nn:nn

    1:
        foreign lpvm access(l##0:wybe.list(T), 0:wybe.int, 16:wybe.int, 0:wybe.int, ?h##0:T) @list:nn:nn
        foreign lpvm access(~l##0:wybe.list(T), 8:wybe.int, 16:wybe.int, 0:wybe.int, ?t##0:wybe.list(T)) @list:nn:nn
        p##0:(T, ?wybe.bool)(h##0:T, ?tmp#5##0:wybe.bool) #1 @tcmc_partition_params_args_mismatch:nn:nn
        case ~tmp#5##0:wybe.bool of
        0:
            foreign llvm move(0:wybe.list(T), ?yes##0:wybe.list(T)) @tcmc_partition_params_args_mismatch:nn:nn
            foreign llvm move(0:wybe.list(T), ?no##0:wybe.list(T)) @tcmc_partition_params_args_mismatch:nn:nn

        1:
            foreign lpvm alloc(16:wybe.int, ?tmp#11##0:wybe.list(T)) @list:nn:nn
            foreign lpvm mutate(~tmp#11##0:wybe.list(T), ?tmp#12##0:wybe.list(T), 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~h##0:T) @list:nn:nn
            tcmc_partition_params_args_mismatch.partition<0>(~p##0:(T, ?wybe.bool), ~t##0:wybe.list(T), outByReference yes0##0:wybe.list(T), ?yes##0:wybe.list(T)) #2 @tcmc_partition_params_args_mismatch:nn:nn
            foreign lpvm mutate(~tmp#12##0:wybe.list(T), ?no##0:wybe.list(T), 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~takeReference yes0##0:wybe.list(T)) @list:nn:nn



  LLVM code       :

; ModuleID = 'tcmc_partition_params_args_mismatch'


 


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  i64 @"tcmc_partition_params_args_mismatch.partition<0>"(i64  %"p##0", i64  %"l##0", i64*  %"yes##0")    {
entry:
  %0 = icmp ne i64 %"l##0", 0 
  br i1 %0, label %if.then, label %if.else 
if.then:
  %1 = inttoptr i64 %"l##0" to i64* 
  %2 = getelementptr  i64, i64* %1, i64 0 
  %3 = load  i64, i64* %2 
  %4 = add   i64 %"l##0", 8 
  %5 = inttoptr i64 %4 to i64* 
  %6 = getelementptr  i64, i64* %5, i64 0 
  %7 = load  i64, i64* %6 
  %8 = inttoptr i64 %"p##0" to i64* 
  %9 = load  i64, i64* %8 
  %10 = inttoptr i64 %9 to i64 (i64, i64)* 
  %11 = tail call fastcc  i64  %10(i64  %"p##0", i64  %3)  
  %12 = trunc i64 %11 to i1  
  br i1 %12, label %if.then1, label %if.else1 
if.else:
  store  i64 0, i64* %"yes##0" 
  ret i64 0 
if.then1:
  %13 = trunc i64 16 to i32  
  %14 = tail call ccc  i8*  @wybe_malloc(i32  %13)  
  %15 = ptrtoint i8* %14 to i64 
  %16 = inttoptr i64 %15 to i64* 
  %17 = getelementptr  i64, i64* %16, i64 0 
  store  i64 %3, i64* %17 
  %18 = add   i64 %15, 8 
  %19 = inttoptr i64 %18 to i64* 
  %20 = tail call fastcc  i64  @"tcmc_partition_params_args_mismatch.partition<0>"(i64  %"p##0", i64  %7, i64*  %19)  
  store  i64 %20, i64* %"yes##0" 
  ret i64 %15 
if.else1:
  store  i64 0, i64* %"yes##0" 
  ret i64 0 
}
