use benchmark

# very inefficient way of calculating fibonacci sequence
def fib(x: int) = if {
    x = 0 ::
        0
    | else :: if {
        x = 1 ::
            1
        | else ::
            fib(x-1) + fib(x-2)
    }
}

pub def {semipure} need(stmt:{impure,resource}()) {!stmt}

!need({impure,resource} {
    !benchmark.cpu_time({impure} { ?@1 = fib(42) }, ?out, ?time)
    !println(time)
})

!benchmark.benchmark({impure} { ?@1 = fib(42) })